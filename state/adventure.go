// Code generated by yaml2go on 2022-08-16T20:50:00Z; DO NOT EDIT.

// Open Adventure - a clone of Open Adventure written in Go
// Copyright (c) 2022 Michael D Henderson
// SPDX-License-Identifier: BSD-2-clause

package state

// Adventure holds all the data needed for the game.
// In theory, writing out this would be all that's needed to save and restore a game.
type Adventure struct {
	Version           struct{ Major, Minor, Patch int; Suffix string }
	Actions           *Actions
	ArbitraryMessages *ArbitraryMessages
	Classes           []*Class
	Locations         *Locations
	Motions           *Motions
	Obituaries        []*Obituary
	Objects           *Objects
	TurnThresholds    []*TurnThreshold
}

// NewAdventure returns an initialized adventure.
func NewAdventure() (*Adventure, error) {
	return &Adventure{
		Version:           struct{ Major, Minor, Patch int; Suffix string }{Major: 1, Minor: 11},
		Actions:           generateActions(),
		ArbitraryMessages: generateArbitraryMessages(),
		Classes:           generateClasses(),
		Locations:         generateLocations(),
		Motions:           generateMotions(),
		Obituaries:        generateObituaries(),
		Objects:           generateObjects(),
		TurnThresholds:    generateTurnThresholds(),
	}, nil
}
